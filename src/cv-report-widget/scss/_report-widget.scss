@use "sass:map";
@use "sass:color";

:host {
  display: inline-block;
}

$actions: "to-be-fixed" "error", "fixed" "success", "no-error" "success", "ignore" "success";

@each $action, $status in $actions {
  :host([action="#{$action}"]:focus-visible) {
    outline-color: var(--cv-#{$status});
  }

  :host([action="#{$action}"]) {
    --cv-widget-state-color: #{tint-color(map.get($theme-colors, $status), 70%)};
    // --cv-widget-state-color: #{color.adjust(map.get($theme-colors, $status), $alpha: -0.7)};
  }
}

::slotted(img) {
  outline: 2px solid var(--cv-accent);
  outline-offset: -2px;
  position: relative;
}

.report-widget-container {
  // @extend %widget-state;
  @include widget-state(2em, $border-width: 1px);

  position: relative;
  box-shadow: unset !important;
  border-radius: 0.5em;
}

.report-widget {
  --cv-report-widget-open-animation-duration: var(--cv-speed-duration-medium-in);
  --cv-report-widget-close-animation-duration: var(--cv-speed-duration-medium-out);

  --cv-card-cap-bg: #e0e0e0b3;
  --cv-card-cap-color: #000;
  --cv-card-cap-padding-y: 1em;
  --cv-card-cap-padding-x: 1.5em;
  --cv-card-color: inherit;
  --cv-card-spacer-y: 1em;
  --cv-card-spacer-x: 1.5em;
  --cv-card-border-radius: 0.5em;
  --cv-card-inner-border-radius: var(--cv-card-border-radius);
  --cv-card-box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.25), 0 4px 6px -4px rgb(0 0 0 / 0.25);

  @extend .card;

  display: none;
  min-width: 450px;
  max-width: 600px;
  padding: 0;
  // z-index: 1;
  position: relative;
  cursor: auto;

  &[open] {
    display: block;
    z-index: 15001;
  }
}

.report-widget::after {
  content: "allo";
}

.card-header {
  font-weight: 500;
}

cv-report-body {
  --cv-report-body-margin-left: 0;
}
